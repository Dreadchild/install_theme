* store the index_path value in the install_theme.yml file
* install_theme.yml stores the asset paths; useful if they are configured manually
* allow for image folder to be nested within css folder in theme

=== 0.8.1 / 2009-10-14

Minor:
* oops, require hpricot not nokogiri

=== 0.8.0 / 2009-10-12

Major:
* Paths (xpath/css path) can specify to replace the internals of a DOM (as it did before) or the entire DOM node itself. Previously --partial "header:#header h2" would have replace the inner HTML of the DOM, but now it replaces the DOM node itself. To replace the inner HTML, use --partial "header:#header h2:text" (css path) or --partial "header://div[@id='header']/h2/text()"
* CLI option --action/-a added - the extracted content_path contents can be stored in a Rails action template file

Minor:
* convert layouts to haml regardless of their name
* Updated CLI Usage help

Internal:
* Minimized spec suite by extracting a common file diff test into macro method

=== 0.7.2 / 2009-10-10

* CLI shows a useful error message when --partial argument is incorrectly formatted
* added History link to README

=== 0.7.1 / 2009-10-08

Major:
* CLI has a --layout/-l flag to set the layout file name (still defaults to application[.html.erb])
* CLI has a --defaults_file flag to select an alternate YAML file containing defaults for the theme.
* Layout files have 'javascript_include_tag :all' added to the <head> section

Minor:
* refactor before(:all) blocks into common helper setup_app_with_theme
* reorder the CLI help Usage message to show new order of arguments
* reordering the CLI flags in the help display
* removed the unfinished sentence about Dr Nic

=== 0.7.0 / 2009-10-07

Major:
* Reversed the order of the first two CLI arguments (in preparation for path/to/template to be optional)
* content_path and --partial flags are optional after a template is installed once

Minor:
* README describes how Theme Reuse works
* CLI shows help/error message if content_path isn't passed as argument or available from defaults file
* improved the clean_stylesheet helper and fixed the corresponding test
* if stylesheet path is root of template folder, then use image path for path substitutions

=== 0.6.2 / 2009-10-06

Major:

* haml is no longer a dependency for installation, just for development (and you'll need it for the --haml option)

Minor:
* update README header
* updated README for changed CLI flags

=== 0.6.1 / 2009-10-06

Major:

* much better algorithm for cleaning up stylesheets
* The content_id argument is now content_path - it is either a CSSpath or XPath expression. 
  The --inside_yields flag is renamed to --partial (-p) 
  Testing for using xpath and csspath in the content_path and --partials arguments.

=== 0.6.0 / 2009-10-02

Major:

* the extracted partials are now converted into app/views/layouts/_section.html.erb/haml partials and automatically loaded if not overridden
* Partials extracted from template become default partial contents using #render_or_default 
  To override, either use content_for(:label) [as before] or add a _label.html.erb/haml partial 
  in your controller's app/views/my_controller folder
* Contents removed for <%= yield %> are now included in the original_templates/index.html.erb/haml file for future reference

Minor:

* remove .erb files if successfully converted to .haml [Jack Chen and Dr Nic Williams]
* Extract the CLI arguments after doing the options parsing, so that it can find -h + -v helper flags [Jack Chen and Dr Nic Williams]

=== 0.5.2 / 2009-09-29

NOTE: Haml output can be improved by installing haml from http://github.com/drnic/haml
to get latest patches. Future History.txt will update when it has been applied to haml gem.

Major:
* Speed improvements by using html2haml/css2sass internally instead of Ruby shell

Minor/Internal:
* reverted the content_for erb to have -%> suffixes [Jack Chen and Dr Nic Williams]
* Fixed the test for generation of the sample haml file of content_for samples [Jack Chen and Dr Nic Williams]
* removing the matchers we weren't using [Jack Chen and Dr Nic Williams]
* If html2haml or css2sass throw an error then copy over the original erb/css file instead. [Jack Chen and Dr Nic Williams]
* rendering html2haml with rhtml enabled [Jack Chen and Dr Nic Williams]
* using before(:all) around the theme installation calls so they are only run once
* removed test theme webresourcedepot
* sample extracted HTML placed into a app/views/original_template/index.html.erb file instead of readme printout
* removed the djclub test theme as its interesting qualities for testing (assets in root folder) are duplicated by the hobbit theme

=== 0.5.1 / 2009-09-28

Major:
* Much better options syntax: --inside_yield header:#header

Minor:
* added Haml instructions to README, and --erb flag to force erb generation

=== 0.5.0 / 2009-09-27

* haml support

=== 0.4.1 / 2009-09-27

Major:
* Allow a class name instead of a DOM element id for the content path
* Templates can have assets in the root of the template folder

Minor:
* cleaning actual/expected files so EOL characters aren't the cause of diff mismatches

=== 0.4.0 / 2009-09-27

* rename gem to install_theme from convert_theme

=== 0.3.1 / 2009-09-27

Major:
* Display sample Ruby for how to use the named yields inserted into the layout.

Minor:
* Include sample for the automatically included <%= yield(:head) %>
* passing target rails path into #new instead of #apply_to; which is renamed to #apply_to_target
* More spec cleanup
* remove script folder from expected rails apps; not required
* minor refactoring of specs

=== 0.3.0 / 2009-09-27

Major:
* content_id is now a required argument of the CLI; instead of --content_id flag
* Replace some DOM content with <%= yield :some_label %> with --inside_yields:
     convert_theme path/to/app path/to/rails_app content_box \
      "--inside_yield=header=>#header h2" \
      --inside_yield=sidebar=>#sidebar
* insert <%= yield(:head) %> at the end of the <head> section of layouts

Minor:
* Can use css paths to identify inner html to replace with <%= yield :some_header %>. 
  For example, to constructor pass :inside_yields => { :some_header => "header h3" }
* removing PostInstall.txt from project
* Remove the current spec/tmp from the gem

=== 0.2.0 / 2009-09-26

Major:
* Using Rubigen to install files, which means you get
  prompted about conflicts.

Commits:
* Running specs no longer spews out the rubigen create/exists logs
* Better checking for file vs directory?
* using rubigen run install modified template files into target rails app
* wired in more options to CLI
* adding hoe-git plugin
* Added README content

=== 0.1.0 2009-09-26

* 1 major enhancement:
  * Initial release
